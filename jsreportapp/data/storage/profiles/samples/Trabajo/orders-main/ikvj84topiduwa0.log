{"type":"operationStart","subtype":"profile","data":{"_id":"StLQVN4SpjpT8blQ","timestamp":"2024-01-18T14:34:00.157Z","state":"queued","mode":"standard","creationDate":"2024-01-18T14:34:00.161Z","modificationDate":"2024-01-18T14:34:00.161Z","shortid":"GQiYz-j","$entitySet":"profiles"},"doDiffs":false,"timestamp":1705588440158,"id":"6gaximj5pmzbznt","previousOperationId":null,"operationId":"8uv6hrw21xrd2xh"}
{"type":"log","level":"info","message":"Render request 4 queued for execution and waiting for available worker","previousOperationId":"8uv6hrw21xrd2xh","timestamp":1705588440159,"id":"5sei0ia4yt5rj4t"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"8uv6hrw21xrd2xh","timestamp":1705588440178,"id":"tfsz17d2o7tkznx","previousEventId":"6gaximj5pmzbznt","operationId":"y85pstwpttz36ud"}
{"type":"log","timestamp":1705588440178,"level":"info","message":"Starting rendering request 4","meta":{"rootId":"ikvj84topiduwa0","id":"ikvj84topiduwa0"},"id":"7y6f5hgwyz7gqgv","previousOperationId":"y85pstwpttz36ud"}
{"type":"log","timestamp":1705588440178,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"ikvj84topiduwa0","id":"ikvj84topiduwa0"},"id":"7rt4f6tl6ic12zf","previousOperationId":"y85pstwpttz36ud"}
{"type":"log","timestamp":1705588440179,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"ikvj84topiduwa0","id":"ikvj84topiduwa0"},"id":"1hpksp91sg6q20q","previousOperationId":"y85pstwpttz36ud"}
{"type":"log","timestamp":1705588440187,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"ikvj84topiduwa0","id":"ikvj84topiduwa0"},"id":"27ahty58fw2sxlk","previousOperationId":"y85pstwpttz36ud"}
{"type":"log","timestamp":1705588440310,"level":"warn","message":"Error when processing render request 4\n(because) error when evaluating custom script /samples/Trabajo/orders-script\nChart is not defined\n\n(sandbox.js line 37:1)\n\n  35 | const barColors = [\"red\", \"green\",\"blue\",\"orange\",\"brown\"];\n  36 |\n> 37 | new Chart(\"myChart\", {\n     | ^\n  38 |   type: \"bar\",\n  39 |   data: {\n  40 |     labels: xValues,\n\n\nReferenceError: Chart is not defined\n    at sandbox.js:37:1","meta":{"rootId":"ikvj84topiduwa0","id":"ikvj84topiduwa0"},"id":"av5vc2olh9w5nhz","previousOperationId":"y85pstwpttz36ud"}
{"type":"log","timestamp":1705588440310,"level":"warn","message":"Rendering request 4 finished with error in 153 ms","meta":{"rootId":"ikvj84topiduwa0","id":"ikvj84topiduwa0"},"id":"6lamqvlnp13dws3","previousOperationId":"y85pstwpttz36ud"}
{"type":"error","timestamp":1705588440320,"statusCode":400,"weak":true,"lineNumber":37,"decoratedSuffix":"\n\n(sandbox.js line 37:1)\n\n  35 | const barColors = [\"red\", \"green\",\"blue\",\"orange\",\"brown\"];\n  36 |\n> 37 | new Chart(\"myChart\", {\n     | ^\n  38 |   type: \"bar\",\n  39 |   data: {\n  40 |     labels: xValues,\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"const axios = require('axios');\n\nfunction fetchData() {\n  const apiUrl = 'http://localhost:3001/races';\n\n  return axios.get(apiUrl)\n    .then(response => response.data)\n    .catch(error => {\n      console.error('Error fetching data:', error);\n      throw error;\n    });\n}\n\nfunction transformData(data) {\n  return data.data.map(race => {\n    const raceRunners = race.runners.map(runner => ({\n      id: runner._id,\n      name: runner.name,\n      phone: runner.phone,\n    }));\n\n    return {\n      country: race._id,\n      city: race.city,\n      eventDate: race.eventDate,\n      length: race.length,\n      runners: raceRunners,\n      runnerCount: race.runners.length,\n    };\n  });\n}\n\nconst xValues = [\"Italy\", \"France\", \"Spain\", \"USA\", \"Argentina\"];\nconst yValues = [55, 49, 44, 24, 15];\nconst barColors = [\"red\", \"green\",\"blue\",\"orange\",\"brown\"];\n\nnew Chart(\"myChart\", {\n  type: \"bar\",\n  data: {\n    labels: xValues,\n    datasets: [{\n      backgroundColor: barColors,\n      data: yValues\n    }]\n  },\n  options: {}\n});\n\nfunction beforeRender(req, res, done) {\n  fetchData()\n    .then(data => {\n      const transformedData = transformData(data);\n\n      // Assign the transformed data to the 'orders' variable in the template\n      req.data = {\n        orders: transformedData\n      };\n\n      done();\n    })\n    .catch(error => {\n      res.statusCode = 500;\n      res.end(`Error: ${error.message}`);\n    });\n}"},"property":"content","logged":true,"previousOperationId":"y85pstwpttz36ud","id":"om27796luy5609s","stack":"ReferenceError: Chart is not defined\n    at sandbox.js:37:1","message":"Error when evaluating custom script /samples/Trabajo/orders-script\nChart is not defined\n\n(sandbox.js line 37:1)\n\n  35 | const barColors = [\"red\", \"green\",\"blue\",\"orange\",\"brown\"];\n  36 |\n> 37 | new Chart(\"myChart\", {\n     | ^\n  38 |   type: \"bar\",\n  39 |   data: {\n  40 |     labels: xValues,\n\n"}
