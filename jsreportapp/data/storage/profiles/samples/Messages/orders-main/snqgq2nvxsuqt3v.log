{"type":"operationStart","subtype":"profile","data":{"_id":"HyKXYFR5AUZxv5iv","timestamp":"2024-02-19T16:01:49.455Z","state":"queued","mode":"standard","creationDate":"2024-02-19T16:01:49.456Z","modificationDate":"2024-02-19T16:01:49.456Z","shortid":"p4lecNZ","$entitySet":"profiles"},"doDiffs":false,"timestamp":1708358509455,"id":"qpzeetibroo6p5a","previousOperationId":null,"operationId":"srkgc5fl5oxao1k"}
{"type":"log","level":"info","message":"Render request 33 queued for execution and waiting for available worker","previousOperationId":"srkgc5fl5oxao1k","timestamp":1708358509456,"id":"x6j8vjjeb1u2ixc"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"srkgc5fl5oxao1k","timestamp":1708358509464,"id":"0qmbu7r97ek7nt7","previousEventId":"qpzeetibroo6p5a","operationId":"z1eb7ou9a4qr01r"}
{"type":"log","timestamp":1708358509464,"level":"info","message":"Starting rendering request 33","meta":{"rootId":"snqgq2nvxsuqt3v","id":"snqgq2nvxsuqt3v"},"id":"a9t4wt84846fq3v","previousOperationId":"z1eb7ou9a4qr01r"}
{"type":"log","timestamp":1708358509465,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"snqgq2nvxsuqt3v","id":"snqgq2nvxsuqt3v"},"id":"fh9409q0yshv48j","previousOperationId":"z1eb7ou9a4qr01r"}
{"type":"log","timestamp":1708358509466,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"snqgq2nvxsuqt3v","id":"snqgq2nvxsuqt3v"},"id":"2oz555anurkyc5u","previousOperationId":"z1eb7ou9a4qr01r"}
{"type":"log","timestamp":1708358509483,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"snqgq2nvxsuqt3v","id":"snqgq2nvxsuqt3v"},"id":"o8rlnfumqpaagpr","previousOperationId":"z1eb7ou9a4qr01r"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1708358509494,"id":"yyn9u1y6un8mhxw","previousEventId":"0qmbu7r97ek7nt7","operationId":"dini0isvmeqfh0m","previousOperationId":"z1eb7ou9a4qr01r"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"dini0isvmeqfh0m","timestamp":1708358509494,"id":"1bnekwi99rs34r8","previousEventId":"yyn9u1y6un8mhxw","operationId":"alecpiql4858csd"}
{"type":"log","timestamp":1708358509500,"level":"debug","message":"(console:error) Invalid data structure: [\n  {\n    _id: '65cf97521a693372ab6ec1f6',\n    sender: 'admin',\n    message: 'aaaaa',\n    timestamp: '2024-02-16T17:11:46.933Z',\n    __v: 0\n  },\n  {\n    _id: '65cfc1f35abd8c204aa18169',\n    sender: 'admin',\n    message: 'a',\n    timestamp: '2024-02-16T20:13:39.759Z',\n    __v: 0\n  },\n  {\n    _id: '65cfc21b5abd8c204aa18176',\n    sender: 'admin',\n    message: 'a',\n    timestamp: '2024-02-16T20:14:19.324Z',\n    __v: 0\n  },\n  {\n    _id: '65cfc2325abd8c204aa18188',\n    sender: 'jose',\n    message: 'saholasi',\n    timestamp: '2024-02-16T20:14:42.354Z',\n    __v: 0\n  },\n  {\n    _id: '65d27ff52b39f636c0c341dd',\n    sender: 'jose',\n    message: 'aaaa',\n    timestamp: '2024-02-18T22:08:53.049Z',\n    __v: 0\n  },\n  {\n    _id: '65d282772b39f636c0c3420e',\n    sender: 'jose',\n    message: 'aa',\n    timestamp: '2024-02-18T22:19:35.462Z',\n    __v: 0\n  }\n]","meta":{"userLevel":true,"rootId":"snqgq2nvxsuqt3v","id":"snqgq2nvxsuqt3v"},"id":"9d4129iyosl8hkl","previousOperationId":"alecpiql4858csd"}
{"type":"log","timestamp":1708358509501,"level":"warn","message":"Error when processing render request 33\n(because) error when evaluating custom script /samples/Messages/orders-script\nInvalid data structure\n\n(sandbox.js line 25:11)\n\n  23 |   } else {\n  24 |     console.error('Invalid data structure:', data);\n> 25 |     throw new Error('Invalid data structure');  // Propagar un error para que jsreport maneje el error correctamente\n     |           ^\n  26 |   }\n  27 | }\n  28 |\n\n(sandbox.js line 32:31)\n\n  30 |   fetchData()\n  31 |     .then(data => {\n> 32 |       const transformedData = transformData(data);\n     |                               ^\n  33 |\n  34 |       req.data = {\n  35 |         orders: transformedData\n\n\nError: Invalid data structure\n    at transformData (sandbox.js:25:11)\n    at sandbox.js:32:31\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","meta":{"rootId":"snqgq2nvxsuqt3v","id":"snqgq2nvxsuqt3v"},"id":"hrq0he1c0431sft","previousOperationId":"alecpiql4858csd"}
{"type":"log","timestamp":1708358509501,"level":"warn","message":"Rendering request 33 finished with error in 46 ms","meta":{"rootId":"snqgq2nvxsuqt3v","id":"snqgq2nvxsuqt3v"},"id":"sv7oo77t53sqmnt","previousOperationId":"alecpiql4858csd"}
{"type":"error","timestamp":1708358509502,"statusCode":400,"weak":true,"lineNumber":25,"decoratedSuffix":"\n\n(sandbox.js line 25:11)\n\n  23 |   } else {\n  24 |     console.error('Invalid data structure:', data);\n> 25 |     throw new Error('Invalid data structure');  // Propagar un error para que jsreport maneje el error correctamente\n     |           ^\n  26 |   }\n  27 | }\n  28 |\n\n(sandbox.js line 32:31)\n\n  30 |   fetchData()\n  31 |     .then(data => {\n> 32 |       const transformedData = transformData(data);\n     |                               ^\n  33 |\n  34 |       req.data = {\n  35 |         orders: transformedData\n\n","entity":{"shortid":"SCNwG8m","name":"orders-script","content":"const axios = require('axios');\n\nfunction fetchData() {\n  const apiUrl = 'http://localhost:3001/messages';\n\n  return axios.get(apiUrl)\n    .then(response => response.data)\n    .catch(error => {\n      console.error('Error fetching data:', error);\n      throw error; \n    });\n}\n\nfunction transformData(data) {\n  // Verificar si data.data es un array antes de llamar a map\n  if (Array.isArray(data.data)) {\n    return data.data.map(message => {\n      return {\n        messages: message._id,\n        rows: message.sender\n      };\n    });\n  } else {\n    console.error('Invalid data structure:', data);\n    throw new Error('Invalid data structure');  // Propagar un error para que jsreport maneje el error correctamente\n  }\n}\n\nfunction beforeRender(req, res, done) {\n  fetchData()\n    .then(data => {\n      const transformedData = transformData(data);\n\n      req.data = {\n        orders: transformedData\n      };\n\n      done(); \n    })\n    .catch(error => {\n      done(error); \n    });\n}\n"},"property":"content","logged":true,"previousOperationId":"alecpiql4858csd","id":"f47z0seoo1iqq0e","stack":"Error: Invalid data structure\n    at transformData (sandbox.js:25:11)\n    at sandbox.js:32:31\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","message":"Error when evaluating custom script /samples/Messages/orders-script\nInvalid data structure\n\n(sandbox.js line 25:11)\n\n  23 |   } else {\n  24 |     console.error('Invalid data structure:', data);\n> 25 |     throw new Error('Invalid data structure');  // Propagar un error para que jsreport maneje el error correctamente\n     |           ^\n  26 |   }\n  27 | }\n  28 |\n\n(sandbox.js line 32:31)\n\n  30 |   fetchData()\n  31 |     .then(data => {\n> 32 |       const transformedData = transformData(data);\n     |                               ^\n  33 |\n  34 |       req.data = {\n  35 |         orders: transformedData\n\n"}
