{"type":"operationStart","subtype":"profile","data":{"_id":"A2KUqq366EmsR39u","timestamp":"2024-02-19T15:53:08.340Z","state":"queued","mode":"full","creationDate":"2024-02-19T15:53:08.341Z","modificationDate":"2024-02-19T15:53:08.341Z","shortid":"ELoByVd","$entitySet":"profiles"},"doDiffs":false,"timestamp":1708357988340,"id":"5cks3kzasz3d91q","previousOperationId":null,"operationId":"t4ma6v709ytqdw9"}
{"type":"log","level":"info","message":"Render request 14 queued for execution and waiting for available worker","previousOperationId":"t4ma6v709ytqdw9","timestamp":1708357988340,"id":"480rh4p850h3gfn"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"t4ma6v709ytqdw9","timestamp":1708357988348,"id":"llbubvoip8w5tqo","previousEventId":"5cks3kzasz3d91q","operationId":"o10teug9iuzo5yl","res":{"content":null,"meta":{"diff":"Index: resMeta\n===================================================================\n--- resMeta\n+++ resMeta\n@@ -1,0 +1,1 @@\n\\ No newline at end of file\n+{}\n\\ No newline at end of file\n"}},"req":{"diff":"Index: req\n===================================================================\n--- req\n+++ req\n@@ -1,0 +1,64 @@\n\\ No newline at end of file\n+{\n+  \"template\": {\n+    \"phantom\": {\n+      \"waitForJS\": true\n+    },\n+    \"recipe\": \"chrome-pdf\",\n+    \"engine\": \"handlebars\",\n+    \"scripts\": [\n+      {\n+        \"__isDirty\": false,\n+        \"__isLoaded\": true,\n+        \"__entitySet\": \"scripts\",\n+        \"_id\": \"uoEf9sQndSdwmGiy\",\n+        \"name\": \"orders-script\",\n+        \"isGlobal\": false,\n+        \"scope\": \"template\",\n+        \"shortid\": \"SCNwG8m\",\n+        \"folder\": {\n+          \"shortid\": \"xY0i-G4\"\n+        },\n+        \"creationDate\": \"2024-02-19T15:44:13.547Z\",\n+        \"modificationDate\": \"2024-02-19T15:53:06.616Z\",\n+        \"content\": \"const axios = require('axios');\\n\\nfunction fetchData() {\\n  // Replace 'http://localhost:3001/races' with your actual API endpoint\\n  const apiUrl = 'http://localhost:3001/messages';\\n\\n  return axios.get(apiUrl)\\n    .then(response => response.data)\\n    .catch(error => {\\n      console.error('Error fetching data:', error);\\n      throw error;\\n    });\\n}\\n\\nfunction transformData(data) {\\n  // Modify data as needed for your report\\n  return data.data.map(message => {\\n    return {\\n      message: message._id, // Assuming 'city' is the country field\\n      rows: message.sender // Modify this according to your data structure\\n    };\\n  });\\n}\\n\\n// 'beforeRender' script to fetch data and transform it before rendering the report\\nfunction beforeRender(req, res, done) {\\n  fetchData()\\n    .then(data => {\\n      const transformedData = transformData(data);\\n\\n      // Assign the transformed data to the 'orders' variable in the template\\n      req.data = {\\n        orders: transformedData\\n      };\\n\\n      done();\\n    })\\n    .catch(error => {\\n      res.statusCode = 500;\\n      res.end(`Error: ${error.message}`);\\n    });\\n}\\n\",\n+        \"__name\": \"orders-script\",\n+        \"__isGlobal\": false,\n+        \"__scope\": \"template\",\n+        \"__shortid\": \"SCNwG8m\",\n+        \"__folder\": {\n+          \"shortid\": \"xY0i-G4\"\n+        }\n+      }\n+    ],\n+    \"name\": \"orders-main\",\n+    \"chrome\": {\n+      \"printBackground\": true,\n+      \"marginTop\": \"4cm\",\n+      \"marginRight\": \"1.5cm\",\n+      \"marginBottom\": \"1.5cm\",\n+      \"marginLeft\": \"1.5cm\",\n+      \"waitForJS\": false,\n+      \"headerTemplate\": \"\",\n+      \"footerTemplate\": \"\"\n+    },\n+    \"pdfOperations\": [\n+      {\n+        \"type\": \"merge\",\n+        \"templateShortid\": \"dDjk-NB\",\n+        \"renderForEveryPage\": false,\n+        \"mergeWholeDocument\": true\n+      }\n+    ],\n+    \"inheritedReadPermissions\": [],\n+    \"inheritedEditPermissions\": [],\n+    \"creationDate\": \"2024-02-19T15:44:13.542Z\",\n+    \"modificationDate\": \"2024-02-19T15:51:00.959Z\",\n+    \"content\": \"<!--\\nMore complex example demonstrating advanced features like\\n- using custom server script to fetch remote data\\n- using custom modules in safe sandbox\\n- painting a chart\\n- using global helpers\\n- merging custom dynamic header document\\n\\nNote: This example requires jsreport to be configured with\\n{ \\\"trustUserCode\\\": true } or\\n{ \\\"sandbox\\\": { \\\"allowedModules\\\": [\\\"https\\\"] } }\\n!-->\\n<html>\\n  <head>\\n    <meta content=\\\"text/html; charset=utf-8\\\" http-equiv=\\\"Content-Type\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/metro/4.1.5/css/metro.min.css\\\">\\n    <script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js'></script>\\n  </head>\\n  <body>\\n    {{#each orders}}\\n        <!-- add hiden information to the page which is resolved in OrdersHeader template\\n             during the pdf merge. See the docs about pdf utils extension for more details. -->\\n        {{{pdfCreatePagesGroup message}}}\\n        <canvas id='orders{{messages}}' style=\\\"margin-bottom:30px\\\"></canvas>\\n        <table class='table striped'>\\n            <thead>\\n                <tr>\\n                    <th>Title</th>\\n                    <th>Message</th>\\n                    <th>Send Time</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                {{#each rows}}\\n                <tr>\\n                    <td>{{title}}</td>\\n                    <td>{{message}}</td>\\n                    <td>{{timestamp}}</td>\\n                </tr>\\n                {{/each}}\\n            </tbody>\\n        </table>\\n\\n        <script>\\n            // convert data into js string using function from asset global helpers.js\\n            // this results into something like var data = { \\\"a\\\": \\\"foo\\\" }\\n            // which gets afterwards interpreted in chrome into object\\n            var data = {{{toJS accumulated}}}\\n\\n            Chart.defaults.global.legend.display = false;\\n\\n            new Chart(orders{{message}}.getContext(\\\"2d\\\"), {\\n                type: 'bar',\\n                data: {\\n                    labels: Object.keys(data),\\n                    datasets: [{\\n                        fillColor: 'blue',\\n                        label: \\\"Orders in time\\\",\\n                        backgroundColor: \\\"rgba(27,161,226,0.2)\\\",\\n                        borderColor: \\\"rgba(27,161,226,1)\\\",\\n                        borderWidth: 1,\\n                        hoverBackgroundColor: \\\"rgba(27,161,226,0.4)\\\",\\n                        hoverBorderColor: \\\"rgba(27,161,226,1)\\\",\\n                        data: Object.keys(data).map(function (o) {\\n                            return data[o].value;\\n                        })\\n                    }]\\n                },\\n                options: {\\n                    animation: {\\n                        duration: 0\\n                    }\\n                }\\n            });\\n        </script>\\n        <div style='page-break-after: always;'>\\n        </div>\\n    {{/each}}\\n  </body>\\n</html>\\n\",\n+    \"helpers\": \"\",\n+    \"folder\": {\n+      \"shortid\": \"xY0i-G4\"\n+    },\n+    \"shortid\": \"JI6naMe\"\n+  },\n+  \"data\": {}\n+}\n\\ No newline at end of file\n"}}
{"type":"log","timestamp":1708357988351,"level":"info","message":"Starting rendering request 14","meta":{"rootId":"rydmhvws91ag1ml","id":"rydmhvws91ag1ml"},"id":"vyw0id0o70d94to","previousOperationId":"o10teug9iuzo5yl"}
{"type":"log","timestamp":1708357988352,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"rydmhvws91ag1ml","id":"rydmhvws91ag1ml"},"id":"nchbsjdwq9lj69d","previousOperationId":"o10teug9iuzo5yl"}
{"type":"log","timestamp":1708357988355,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"rydmhvws91ag1ml","id":"rydmhvws91ag1ml"},"id":"rers5yenc7gevh3","previousOperationId":"o10teug9iuzo5yl"}
{"type":"log","timestamp":1708357988359,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"rydmhvws91ag1ml","id":"rydmhvws91ag1ml"},"id":"z7lweaitupa2w94","previousOperationId":"o10teug9iuzo5yl"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1708357988511,"id":"4fatfvizku1se59","previousEventId":"llbubvoip8w5tqo","operationId":"g1oqqs3kuly9qzk","previousOperationId":"o10teug9iuzo5yl","res":{"content":null,"meta":{"diff":"Index: resMeta\n===================================================================\n--- resMeta\n+++ resMeta\n@@ -1,1 +1,1 @@\n-{}\n\\ No newline at end of file\n+{\"reportName\":\"orders-main\",\"headers\":{}}\n\\ No newline at end of file\n"}},"req":{"diff":"Index: req\n===================================================================\n--- req\n+++ req\n@@ -61,1 +61,2 @@\n-    \"shortid\": \"JI6naMe\"\n+    \"shortid\": \"JI6naMe\",\n+    \"_id\": \"oSE2FgG5Vs4xehzR\"\n"}}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"g1oqqs3kuly9qzk","timestamp":1708357988512,"id":"f0fwo1znm8qup4q","previousEventId":"4fatfvizku1se59","operationId":"lbrqtg7ib57deid","res":{"content":null,"meta":{"diff":"Index: resMeta\n===================================================================\n--- resMeta\n+++ resMeta\n"}},"req":{"diff":"Index: req\n===================================================================\n--- req\n+++ req\n"}}
{"type":"log","level":"error","message":"Report render failed\n(because) res.end is not a function\nTypeError: res.end is not a function\n    at sandbox.js:40:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","previousOperationId":"t4ma6v709ytqdw9","timestamp":1708357988532,"id":"65bcr3jdsbk3s2q"}
{"type":"error","timestamp":1708357988532,"code":"WORKER_CRASHED","id":"coi75l8wv2de8pn","stack":"TypeError: res.end is not a function\n    at sandbox.js:40:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","message":"res.end is not a function"}
